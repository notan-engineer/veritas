{
  "project": {
    "name": "Veritas",
    "status": "Production-ready, maximally simplified",
    "docs_reference": "@documentation/technical-design.md"
  },
  "token_optimization": {
    "enabled": true,
    "context_management": "surgical",
    "session_reset_frequency": "per_task",
    "documentation_reference": "link_only",
    "master_guide": "@.notes/cursor-master-guide.md",
    "quick_start": "@.notes/START-HERE.md"
  },
  "critical_rules": [
    {
      "id": "build-directory-critical",
      "rule": "ALL build commands MUST be run from services/ui directory",
      "command": "cd services/ui && npm run build && npm run lint",
      "powershell": "cd services/ui; npm run build; npm run lint",
      "error": "NEVER run build from project root - it will fail",
      "severity": "critical",
      "token_impact": "prevents_error_loops"
    },
    {
      "id": "branching-rules",
      "rule": "NEVER push directly to main branch",
      "workflow": "Always create feature branches: git checkout -b feature/description",
      "merge": "Manual merge only by project maintainer",
      "severity": "critical"
    },
    {
      "id": "documentation-updates",
      "rule": "Update documentation with every relevant commit",
      "files": [
        "documentation/technical-design.md",
        "documentation/developer-guidelines.md",
        "documentation/product-requirements.md"
      ],
      "severity": "high"
    },
    {
      "id": "context-surgical",
      "rule": "Use @file and @code surgically. Avoid @folder unless reviewing architecture",
      "examples": {
        "good": "@services/ui/app/page.tsx",
        "bad": "@services/ui/app/"
      },
      "severity": "high",
      "token_impact": "reduces_context_noise"
    },
    {
      "id": "simplicity-first",
      "rule": "Write minimum code necessary to achieve goal",
      "principles": [
        "Favor existing solutions over creating new ones",
        "Question complexity - find simpler approach",
        "Use established patterns"
      ],
      "severity": "high"
    }
  ],
  "development_workflow": {
    "build_validation": {
      "required": "cd services/ui && npm run build && npm run lint must pass",
      "directory": "services/ui",
      "never": "project root"
    },
    "testing": "Test after every significant change",
    "commits": "No commits without successful builds",
    "incremental": "Add features only when actually needed"
  },
  "architecture": {
    "framework": "Next.js 15.3.5 with App Router",
    "language": "TypeScript 5 (strict mode)",
    "database": "Railway PostgreSQL",
    "deployment": "Railway (minimal configuration)",
    "full_details": "@documentation/technical-design.md"
  },
  "database": {
    "tables_count": 6,
    "api_endpoints": 2,
    "pages": 3,
    "components": "Essential only",
    "schema_reference": "@database/railway-schema.sql"
  },
  "ai_agent_behavior": {
    "context_selection": "Always request specific @file, never @folder",
    "session_management": "Recommend new session at task boundaries",
    "tab_guidance": "Tell user to close unnecessary tabs",
    "error_context": "Minimal context for error resolution",
    "documentation": "Reference via @docs, never include full content",
    "framework_reference": "@.notes/cursor-master-guide.md"
  },
  "user_actions": {
    "context_selection": "Provide specific files when requested",
    "session_resets": "Start new chat when AI recommends",
    "tab_management": "Close tabs when AI instructs",
    "build_commands": "Always run from services/ui directory"
  },
  "references": {
    "full_rules": ".cursorrules (original)",
    "technical_design": "@documentation/technical-design.md",
    "developer_guidelines": "@documentation/developer-guidelines.md",
    "optimization_framework": "@.notes/cursor-master-guide.md"
  }
} 