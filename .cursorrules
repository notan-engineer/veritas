# Keystone Framework - Core Rules & Project Context

## Project: Veritas News Aggregation Platform
**Summary**: Lean news platform presenting verified facts as "factoids" from multiple sources
**Vision**: Transform news consumption with accuracy, bias reduction, and multilingual support (EN/HE)
**Tech Stack**: Next.js 15.3.5, TypeScript 5, Tailwind CSS, PostgreSQL, Railway deployment

## Framework Structure
- `keystone/`: Generic, reusable framework files (no project-specific details)
- `documentation/`: Project-specific knowledge for Veritas
- `projects/`: Development projects with user stories
- `local/`: Git-ignored local development files

## Critical Non-Negotiable Rules
1. **NEVER push directly to main branch** - Use feature branches only
2. **Builds MUST run from service directory**: `cd services/[service] && npm run build`
   - UI Service: `cd services/ui && npm run build`
   - Scraper Service: `cd services/scraper && npm run build`
   - Future services follow same pattern
3. **Context Selection**: ALWAYS use @file, NEVER use @folder
4. **Simplicity & Minimal Code**: Write least code to achieve goal, avoid complexity
5. **User-Centric Development**: Every feature must serve clear user need

## Core Development Principles
- **Simplicity First**: Minimum viable code, no over-engineering
- **User-Centric**: Features driven by actual user needs, not assumptions
- **Incremental**: Start minimal, expand only when proven necessary
- **Test Always**: No commits without successful builds
- **Document Immediately**: Keep docs current with code

## Framework Navigation
- **Agent Behavior**: See `keystone/agentic-principles.md`
- **Code Standards**: See `keystone/development-principles.md`
- **Procedures**: See `keystone/procedures/` for task-specific guides
- **Architecture**: See `documentation/software-architecture.md`
- **Product Details**: See `documentation/the-product.md`

## Development Workflow
1. Create feature branch: `git checkout -b feature/description`
2. Follow appropriate procedure from `keystone/procedures/`
3. Test thoroughly with build commands
4. Update documentation in same commit
5. Request manual merge to main

## Quick Reference
- Reference docs: @documentation/file.md (section)
- Never include full document content in responses
- Use line-specific references when needed: @file.ts:20-40
- Session Management: One Task = One Session
- Tab Management: Keep 3-5 files maximum open at once 